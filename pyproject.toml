[tool.poetry]
name = "fast-rafa"
version = "0.1.0"
description = "Rede de Alimentos e Fornecimento Assistencial"
authors = ["Eduardo Lira <eduardolirainfo@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.13.*"
fastapi = { extras = ["standard"], version = "^0.115.5" }
sqlalchemy = "^2.0.34"
pydantic-settings = "^2.5.2"
alembic = "^1.13.2"
pwdlib = { extras = ["argon2"], version = "^0.2.1" }
python-multipart = "^0.0.16"
faker = "^30.8.1"
pyjwt = "^2.9.0"
jinja2 = "^3.1.4"
pytz = "^2024.2"
tzlocal = "^5.2"
psycopg = {extras = ["binary"], version = "^3.2.4"}


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
taskipy = "^1.13.0"
ruff = "^0.6.9"
httpx = "^0.27.0"

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.taskipy.tasks]
lint = 'ruff check . && ruff check . --diff'
format = 'ruff check . --fix && ruff format .'
run = 'fastapi dev fast_rafa/app.py'
pre_test = 'task lint'
test = 'pytest -s -x --cov=fast_rafa -vv'
post_test = 'coverage html'
seed = "python -c 'import asyncio; from fast_rafa.seeds.seed import run_task_seed; asyncio.run(run_task_seed())'"

undo = "python -c 'import asyncio; from fast_rafa.seeds.undo import run_task_undo; asyncio.run(run_task_undo())'"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
